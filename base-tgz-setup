#!/bin/bash
set -ex

environment="$1"
platform="$2"
eval "$environment"
export CCACHE_DIR="/srv/passenger_autobuilder/ccache/$platform"
mkdir -p "$CCACHE_DIR"
cd /tmp

function apt_get_install()
{
	apt-get install -y --no-install-recommends "$@"
}

function install_apache()
{
	local version="$1"
	local compat_version="$2"
	local with_included_apr="$3"
	local download_apr="$4"
	if [[ ! -e /usr/local/apache-$compat_version ]]; then
		pushd /tmp
		wget http://apache.mirrors.hoobly.com//httpd/httpd-$version.tar.bz2
		tar xjvf httpd-$version.tar.bz2
		rm httpd-$version.tar.bz2
		cd httpd-$version
		if [[ "$download_apr" = --download-apr ]]; then
			pushd srclib

			wget http://mirror.nl.webzilla.com/apache//apr/apr-1.4.8.tar.bz2
			tar xjvf apr-1.4.8.tar.bz2
			rm apr-1.4.8.tar.bz2
			mv apr-1.4.8 apr
			
			wget http://mirror.nl.webzilla.com/apache//apr/apr-util-1.5.2.tar.bz2
			tar xjvf apr-util-1.5.2.tar.bz2
			rm apr-util-1.5.2.tar.bz2
			mv apr-util-1.5.2 apr-util

			popd
		fi
		./configure --prefix=/usr/local/apache-$compat_version $with_included_apr
		make
		make install
		cd ..
		rm -rf httpd-$version
		popd
	fi
}

apt_version=`apt-get --version | head -n 1 | awk '{print $2}'`
[[ "$apt_version" =~ ^([0-9]+)\.([0-9]+) ]]
if [[ ${BASH_REMATCH[1]} > 0 ]] || [[ ${BASH_REMATCH[1]} == 0 && ${BASH_REMATCH[2]} > 7 ]]; then
	echo force-unsafe-io > /etc/dpkg/dpkg.cfg.d/02apt-speedup
fi

if ! grep -q passenger_autobuilder /etc/group; then
	addgroup --gid 2456 passenger_autobuilder
fi
if ! grep -q passenger_autobuilder /etc/passwd; then
	adduser --uid 2456 --gid 2456 --disabled-password --gecos "Passenger Autobuilder" passenger_autobuilder
fi

apt-get update
apt-get upgrade -y
apt_get_install python-software-properties lsb-release
add-apt-repository ppa:phusion.nl/misc
apt-get update

distro_version=`lsb_release -r | awk '{print $2}'`

if [[ $distro_version = 10.04 ]]; then
	apt_get_install git-core
else
	apt_get_install git
fi
apt_get_install build-essential ccache wget curl source-highlight lsb-release \
	ssh sudo mizuho libpcre3-dev

# Install Ruby and Ruby tools
usermod -a -G sudo passenger_autobuilder
sed -i -E 's/^%sudo\tALL=\(ALL:ALL\) ALL$/%sudo  ALL=(ALL:ALL) NOPASSWD: ALL/' /etc/sudoers
sed -i -E 's/^%sudo ALL=\(ALL\) ALL$/%sudo ALL=(ALL) NOPASSWD: ALL/' /etc/sudoers
curl -L https://get.rvm.io | sudo -u passenger_autobuilder sudo bash -s stable
usermod -a -G rvm passenger_autobuilder

sudo -u passenger_autobuilder -H -E bash -lc 'rvm install 1.8.7'
sudo -u passenger_autobuilder -H -E bash -lc 'rvm install 1.9.1'
sudo -u passenger_autobuilder -H -E bash -lc 'rvm install 1.9.2'
sudo -u passenger_autobuilder -H -E bash -lc 'rvm install 1.9.3'
sudo -u passenger_autobuilder -H -E bash -lc 'rvm install 2.0.0'
bash -lc 'rvm --default 1.9.3'
sudo -u passenger_autobuilder -H bash -lc 'rvm --default 1.9.3'
/usr/local/rvm/bin/rvm cleanup all

sudo -u passenger_autobuilder -H bash -lc 'gem install bluecloth --no-rdoc --no-ri'

# Compile a static OpenSSL library.
if [[ ! -e /usr/local/override/bin/openssl ]]; then
	wget http://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz
	tar xzvf openssl-$OPENSSL_VERSION.tar.gz
	rm openssl-$OPENSSL_VERSION.tar.gz
	cd openssl-$OPENSSL_VERSION
	./config --prefix=/usr/local/override --openssldir=/usr/local/override/openssl threads zlib no-shared no-sse2
	make
	make install_sw
	cd ..
	rm -rf openssl-$OPENSSL_VERSION
fi

# Compile a minimalist libcurl with almost no dependencies.
if [[ ! -e /usr/local/override/bin/curl ]]; then
	wget http://curl.haxx.se/download/curl-$CURL_VERSION.tar.bz2
	tar xjvf curl-$CURL_VERSION.tar.bz2
	rm curl-$CURL_VERSION.tar.bz2
	cd curl-$CURL_VERSION
	./configure --prefix=/usr/local/override --disable-shared --disable-manual --disable-ldap --disable-ldaps \
		--disable-rtsp --disable-dict --disable-ftp --disable-ftps --disable-gopher --disable-imap \
		--disable-imaps --disable-pop3 --disable-pop3s --without-librtmp --disable-smtp --disable-smtps \
		--disable-telnet --disable-tftp --without-libmetalink --without-libidn
	make install-strip
	cd ..
	rm -rf curl-$CURL_VERSION
fi

# Compile Apaches
install_apache 2.0.64 2.0
install_apache 2.2.24 2.2 --with-included-apr
install_apache 2.4.4 2.4 --with-included-apr --download-apr
